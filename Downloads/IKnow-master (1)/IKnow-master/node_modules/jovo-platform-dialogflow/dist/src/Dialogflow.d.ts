import { BaseApp, Extensible, Platform, HandleRequest, ExtensibleConfig } from "jovo-core";
import { DialogflowRequestBuilder } from "./core/DialogflowRequestBuilder";
import { DialogflowResponseBuilder } from "./core/DialogflowResponseBuilder";
import { DialogflowTestSuite } from './core/Interfaces';
export interface DialogflowConfig extends ExtensibleConfig {
}
export declare class Dialogflow extends Extensible implements Platform {
    requestBuilder: DialogflowRequestBuilder;
    responseBuilder: DialogflowResponseBuilder;
    config: DialogflowConfig;
    constructor(config?: DialogflowConfig);
    makeTestSuite(): DialogflowTestSuite;
    install(app: BaseApp): void;
    uninstall(app: BaseApp): void;
    initialize(handleRequest: HandleRequest): Promise<void>;
    nlu(handleRequest: HandleRequest): Promise<void>;
    output(handleRequest: HandleRequest): Promise<void>;
    response(handleRequest: HandleRequest): Promise<void>;
}
