import { BaseApp, Extensible, Platform, HandleRequest, ExtensibleConfig } from "jovo-core";
import { GoogleAssistantRequestBuilder } from "./core/GoogleAssistantRequestBuilder";
import { GoogleAssistantResponseBuilder } from "./core/GoogleAssistantResponseBuilder";
import { GoogleAssistantTestSuite } from './core/Interfaces';
export interface Config extends ExtensibleConfig {
    handlers?: any;
}
export declare class GoogleAssistant extends Extensible implements Platform {
    config: Config;
    requestBuilder: GoogleAssistantRequestBuilder;
    responseBuilder: GoogleAssistantResponseBuilder;
    platformRequestClazz: any;
    constructor(config?: Config);
    install(app: BaseApp): void;
    makeTestSuite(): GoogleAssistantTestSuite;
    initDialogflow(): void;
    initialize(handleRequest: HandleRequest): Promise<void>;
    nlu(handleRequest: HandleRequest): Promise<void>;
    output(handleRequest: HandleRequest): Promise<void>;
    response(handleRequest: HandleRequest): Promise<void>;
    uninstall(app: BaseApp): void;
}
