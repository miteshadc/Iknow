import { Plugin } from "jovo-core";
import { GoogleAssistant } from "../GoogleAssistant";
import { GoogleAction } from "../core/GoogleAction";
export interface PaymentOptions {
    googleProvidedOptions: GoogleProvidedOptions;
}
export declare type SupportedCardNetworks = 'AMEX' | 'DISCOVER' | 'MASTERCARD' | 'VISA' | 'JCB';
export interface GoogleProvidedOptions {
    prepaidCardDisallowed: boolean;
    supportedCardNetworks: SupportedCardNetworks[];
    tokenizationParameters: {
        parameters: {
            [key: string]: string;
        };
        tokenizationType: string;
    };
}
export interface OrderOptions {
    requestDeliveryAddress: boolean;
}
export interface Requirements {
    orderOptions: OrderOptions;
    googleProvidedOptions: GoogleProvidedOptions;
}
export declare type RequirementsCheckResult = 'USER_ACTION_REQUIRED' | 'OK' | 'ASSISTANT_SURFACE_NOT_SUPPORTED' | 'REGION_NOT_SUPPORTED';
export declare type DeliveryAddressDecision = 'ACCEPTED' | 'REJECTED';
export declare type TransactionDecision = 'ORDER_ACCEPTED' | 'REJECTED' | 'ORDER_REJECTED' | 'DELIVERY_ADDRESS_UPDATED' | 'CART_CHANGE_REQUESTED';
export interface DeliveryAddressLocation {
    zipCode?: string;
    city?: string;
    coordinates?: {
        latitude: number;
        longitude: number;
    };
    postalAddress: {
        regionCode?: string;
        recipients?: string[];
        postalCode?: string;
        locality?: string;
        addressLines?: string[];
        administrativeArea?: string;
    };
    phoneNumber: string;
}
export interface OrderUpdate {
    actionOrderId: string;
    orderState: {
        label: string;
        state?: 'CREATED' | 'CONFIRMED' | 'IN_TRANSIT' | 'FULFILLED' | 'RETURNED';
    };
    receipt: {
        userVisibleOrderId: string;
    };
    updateTime?: string;
}
export declare class Transaction {
    googleAction: GoogleAction;
    constructor(googleAction: GoogleAction);
    checkRequirements(orderOptions: OrderOptions, paymentOptions: PaymentOptions): this;
    getRequirementsCheckResult(): RequirementsCheckResult | undefined;
    isRequirementsCheckOk(): boolean;
    isRequirementsCheckUserActionRequired(): boolean;
    isRequirementsCheckAssistantSurfaceNotSupported(): boolean;
    isRequirementsCheckRegionNotSupported(): boolean;
    askForDeliveryAddress(reason?: string): this;
    getDeliveryAddressDecision(): DeliveryAddressDecision | undefined;
    isDeliveryAddressAccepted(): boolean;
    isDeliveryAddressRejected(): boolean;
    getDeliveryAddress(): any;
    getDeliveryAddressLocation(): DeliveryAddressLocation | undefined;
    transactionDecision(orderOptions: OrderOptions, paymentOptions: PaymentOptions, proposedOrder: any): this;
    createOrder(speech: string, orderUpdate: OrderUpdate): void;
    getTransactionDecisionResult(): TransactionDecision | undefined;
    isOrderAccepted(): boolean;
    isOrderRejected(): boolean;
    isDeliveryAddressUpdated(): boolean;
    isCartChangeRequested(): boolean;
}
export declare class TransactionsPlugin implements Plugin {
    install(googleAssistant: GoogleAssistant): void;
    type(googleAction: GoogleAction): void;
    output(googleAction: GoogleAction): void;
    uninstall(googleAssistant: GoogleAssistant): void;
}
