import { JovoRequest, Inputs, SessionData } from "jovo-core";
interface Intent {
    name: string;
    displayName: string;
    isFallback: boolean;
}
interface QueryResult {
    queryText: string;
    parameters: any;
    allRequiredParamsPresent: boolean;
    intent: Intent;
    intentDetectionConfidence: number;
    languageCode: string;
    outputContexts?: Context[];
}
export interface OriginalDetectIntentRequest {
    source: string;
    version: string;
    payload: JovoRequest;
}
export interface DialogflowRequestJSON {
    responseId?: string;
    queryResult?: QueryResult;
    originalDetectIntentRequest?: OriginalDetectIntentRequest;
    session?: string;
}
interface Context {
    name: string;
    lifespanCount?: number;
    parameters?: {
        [key: string]: any;
    };
}
export declare class DialogflowRequest implements JovoRequest {
    responseId?: string;
    queryResult?: QueryResult;
    originalDetectIntentRequest?: OriginalDetectIntentRequest;
    session?: string;
    getSessionData(): SessionData;
    setSessionData(sessionData: SessionData): this;
    addSessionData(key: string, value: any): this;
    getAccessToken(): string;
    getLocale(): string;
    getTimestamp(): string;
    getUserId(): string;
    isNewSession(): boolean;
    getIntentName(): string;
    setUserId(userId: string): this;
    toJSON(): DialogflowRequestJSON;
    static fromJSON(json: DialogflowRequestJSON | string): DialogflowRequest;
    static reviver(key: string, value: any): any;
    addInput(key: string, value: string): this;
    setIntentName(intentName: string): this;
    addSessionAttribute(key: string, value: any): this;
    getInputs(): Inputs;
    setInputs(inputs: Inputs): this;
    getState(): any;
    getSessionAttributes(): SessionData;
    setSessionAttributes(attributes: SessionData): this;
    hasAudioInterface(): boolean;
    hasScreenInterface(): boolean;
    hasVideoInterface(): boolean;
    setAccessToken(accessToken: string): this;
    setAudioInterface(): this;
    setLocale(locale: string): this;
    setNewSession(isNew: boolean): this;
    setScreenInterface(): this;
    setVideoInterface(): this;
    setState(state: string): this;
    setTimestamp(timestamp: string): this;
    setParameter(key: string, value: string): this;
}
export {};
