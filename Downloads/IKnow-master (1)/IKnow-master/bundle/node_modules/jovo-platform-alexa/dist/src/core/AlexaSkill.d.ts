import { BaseApp, Jovo, Host, SpeechBuilder } from "jovo-core";
import { AlexaSpeechBuilder } from "./AlexaSpeechBuilder";
import { AlexaUser } from "./AlexaUser";
import { BodyTemplate1, ListTemplate1 } from "..";
export declare class AlexaSkill extends Jovo {
    $alexaSkill: AlexaSkill;
    $user: AlexaUser;
    constructor(app: BaseApp, host: Host);
    /**
     * Returns Speechbuilder object initialized for the platform
     * @public
     * @return {SpeechBuilder}
     */
    speechBuilder(): AlexaSpeechBuilder;
    /**
     * Returns Speechbuilder object initialized for the platform
     * @public
     * @return {SpeechBuilder}
     */
    getSpeechBuilder(): AlexaSpeechBuilder;
    /**
     * Returns boolean if request is part of new session
     * @public
     * @return {boolean}
     */
    isNewSession(): boolean;
    /**
     * Returns timestamp of a user's request
     * @returns {string | undefined}
     */
    getTimestamp(): string;
    /**
     * Returns locale of the request
     * @deprecated use this.$request.getLocale() instead
     * @returns {string}
     */
    getLocale(): string;
    /**
     * Returns UserID
     * @deprecated Use this.$user.getId() instead.
     * @public
     * @return {string}
     */
    getUserId(): string;
    /**
     * Sends an asynchronous speak directive
     * @param {string | SpeechBuilder} speech
     * @param {Function} callback
     * @return {Promise}
     */
    progressiveResponse(speech: string | SpeechBuilder, callback?: Function): Promise<{}> | undefined;
    /**
     * Makes a request to the amazon profile api
     * @public
     * @param {func} callback
     */
    requestAmazonProfile(callback?: Function): Promise<{}> | undefined;
    /**
     * Returns device id
     * @returns {string | undefined}
     */
    getDeviceId(): any;
    /**
     * Returns audio capability of request device
     * @public
     * @return {boolean}
     */
    hasAudioInterface(): boolean;
    /**
     * Returns screen capability of request device
     * @public
     * @return {boolean}
     */
    hasScreenInterface(): boolean;
    /**
     * Returns screen capability of request device
     * @public
     * @return {boolean}
     */
    hasVideoInterface(): boolean;
    /**
     * Returns APL capability of request device
     * @public
     * @return {boolean}
     */
    hasAPLInterface(): boolean;
    /**
     * Returns geo location capability of request device
     * @public
     * @return {boolean}
     */
    hasGeoLocationInterface(): boolean;
    /**
     * Returns type of platform jovo implementation
     * @public
     * @return {string}
     */
    getType(): string;
    /**
     * Returns type of platform type
     * @public
     * @return {string}
     */
    getPlatformType(): string;
    /**
     * Adds raw json directive to output object
     * @param directive
     */
    addDirective(directive: any): void;
    /**
     * Returns id of the touched/selected item
     * @public
     * @return {*}
     */
    getSelectedElementId(): any;
    /**
     * Returns raw text.
     * Only available with catchAll slots
     * @return {String} rawText
     */
    getRawText(): any;
    /**
     * Returns template builder by type
     * @public
     * @param {string} type
     * @return {*}
     */
    templateBuilder(type: string): BodyTemplate1 | ListTemplate1 | undefined;
    /**
     * Returns reason code for an end of a session
     *
     * @public
     * @return {*}
     */
    getEndReason(): any;
}
