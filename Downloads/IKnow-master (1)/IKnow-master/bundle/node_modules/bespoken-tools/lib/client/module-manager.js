"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs = require("fs");
const logging_helper_1 = require("../core/logging-helper");
const node_util_1 = require("../core/node-util");
const path = require("path");
let Logger = "MODULE-MGR";
class ModuleManager {
    constructor(directory) {
        this.directory = directory;
        this.onDirty = null;
        this.dirty = false;
        this.modules = {};
        this.watcher = null;
        if (!path.isAbsolute(directory)) {
            this.directory = path.join(process.cwd(), this.directory);
        }
    }
    start() {
        const self = this;
        const watchOptions = { "persistent": false, "recursive": true };
        this.watcher = fs.watch(this.directory, watchOptions, function (event, filename) {
            let exclude = false;
            if (filename.indexOf("node_modules") !== -1) {
                exclude = true;
            }
            else if (filename.endsWith("___")) {
                exclude = true;
            }
            else if (filename.startsWith(".")) {
                exclude = true;
            }
            if (!exclude) {
                logging_helper_1.LoggingHelper.info(Logger, "FS.Watch Event: " + event + ". File: " + filename + ". Reloading.");
                self.dirty = true;
                if (self.onDirty !== undefined && self.onDirty !== null) {
                    self.onDirty(filename);
                }
            }
        });
    }
    module(filePath) {
        const fullPath = path.join(this.directory, filePath);
        let module = null;
        if (fullPath in this.modules && !this.dirty) {
            module = this.modules[fullPath];
        }
        else {
            module = node_util_1.NodeUtil.load(fullPath);
            this.modules[fullPath] = module;
            this.dirty = false;
        }
        return module;
    }
    stop() {
        this.watcher.close();
    }
}
exports.ModuleManager = ModuleManager;
//# sourceMappingURL=module-manager.js.map